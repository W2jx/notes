1、gw publishToMavenLocal

2、potal中代码测试时使用如下gw clean install -Dmaven.repo.local=/home/user/.m2/repository     文件会加到portal的.m2文件夹下

3、cd liferay-portal/portal-impl
 ant format-source-local-changes (没 commit)
 ant format-source-current-branch
 
4、git rebase master, 解决冲突，git add .，之后执行git rebase --continue

5、git cherry-pick :http://www.ruanyifeng.com/blog/2020/04/git-cherry-pick.html
 git cherry-pick hash 、git cherry-pick <HashA> <HashB> 
 -n，--no-commit（只更新工作区和暂存区，不产生新的提交） 
 --continue（用户解决代码冲突后，第一步将修改的文件重新加入暂存区（git add .），第二步使用下面的命令，让 Cherry pick 过程继续执行。git cherry-pick --continue）
 --abort（发生代码冲突后，放弃合并，回到操作前的样子）
 --quit（发生代码冲突后，退出 Cherry pick，但是不回到操作前的样子）
 
6、To fetch a pull into your repository: git fetch git@github.com:jboss/jboss-common-beans.git refs/pull/4/head
Then do whatever you want with FETCH_HEAD: git checkout -b new-branch（新分支名） FETCH_HEAD

7、git push --force origin test

8、set JPDA_SUSPEND=y

9、Could you please help me scan test results. Could you please help me test the startup test? Thanks! 、Could you please help.... when you free ?

10、..\..\..\gradlew commitCache

11、单元测试portal下的模块的命令 ant test-class -Dtest.class=WikiActivityInterpreterTest
在class后面加个.
classTest.method1
开启debug mode
 -Djvm.debug=true  或者 --debug-jvm
 
12、单元测试modules下的模块的命令  ..\..\..\..\gradlew test --tests com.liferay.petra.io.AutoDeleteFileInputStreamTest （也可以只测试一个方法）

13、..\gradlew baseline
ant deploy

14、集成測試 ../../../../gw testIntegration  --tests com.xxxxxx

15、portal-kernel / ant clean deploy

16、gw deploy

17、1.ant setup-profile-portal
2.ant setup-profile-dxp
3.ant all

18方法入参要按字母顺序排序，方法体中，要return的东西，要最先创建